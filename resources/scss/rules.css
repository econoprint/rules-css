@charset "UTF-8";
:root {
  --font-monospace: SFMono-Regular, Consolas, Liberation Mono, Menlo, Courier, monospace;
  --font-normal: system-ui, -apple-system, BlinkMacSystemFont, Segoe UI, Roboto, Oxygen, Ubuntu, Cantarell, Fira Sans, Droid Sans, Helvetica Neue, Arial, sans-serif, Apple Color Emoji, Segoe UI Emoji, Segoe UI Symbol;
  --font-size-sm: 0.85rem;
  --font-size: 1rem;
  --font-size-lg: 1.25rem;
  --font-weight-normal: 400;
  --font-weight-bold: 700;
  --font-weight-medium: 500;
  --font-weight-light: 300;
  --line-height-normal: 1.25;
  --input-line-height: 1.25;
  --line-height-lg: 1.5625;
  --input-font-size: 1rem;
  --label-font-size: var(--input-font-size);
  --icon-size: 16px;
  --link-decoration: underline;
  --link-hover-decoration: underline;
  --spacer: 1rem;
  --spacer-half: 0.5rem;
  --padding-x: 1rem;
  --padding-y: calc(var(--padding-x) / 2);
  --padding-half-x: calc(var(--padding-x) / 2);
  --padding-half-y: calc(var(--padding-y) / 2);
  --input-padding-x: 0.75rem;
  --input-padding-y: calc(var(--input-padding-x) * .75);
  --input-height: calc(var(--input-font-size) + (var(--input-padding-y) * 2));
  --label-height: calc((var(--label-font-size) * var(--input-line-height)) + var(--input-padding-y));
  --label-width: 10%;
  --btn-padding-x: var(--input-padding-x);
  --btn-padding-y: var(--input-padding-y);
  --border-width: 1px;
  --outline-width: calc(var(--border-width) * 2);
  --border-radius: 4px;
  --major-0: black;
  --major-10: #2c8bb1;
  --major-20: #41a7d0;
  --major-30: #58b2d6;
  --major-40: #6fbcdb;
  --major-50: #86c7e1;
  --major-60: #9ed2e7;
  --major-70: #b5dded;
  --major-80: #cce7f2;
  --major-90: #e3f2f8;
  --major-95: #eff7fb;
  --major-99: #f8fcfd;
  --neutral-0: black;
  --neutral-10: #6e6e6e;
  --neutral-20: #888888;
  --neutral-30: #979797;
  --neutral-40: #a5a5a5;
  --neutral-50: #b4b4b4;
  --neutral-60: #c2c2c2;
  --neutral-70: #d1d1d1;
  --neutral-80: #dfdfdf;
  --neutral-90: #eeeeee;
  --neutral-95: whitesmoke;
  --neutral-99: #fbfbfb;
  --neutral-alt-0: black;
  --neutral-alt-10: #6e6e6e;
  --neutral-alt-20: #888888;
  --neutral-alt-30: #979797;
  --neutral-alt-40: #a5a5a5;
  --neutral-alt-50: #b4b4b4;
  --neutral-alt-60: #c2c2c2;
  --neutral-alt-70: #d1d1d1;
  --neutral-alt-80: #dfdfdf;
  --neutral-alt-90: #eeeeee;
  --neutral-alt-95: whitesmoke;
  --neutral-alt-99: #fbfbfb;
  --color-bg: #fbfbfb;
  --color-text: #6e6e6e;
  --color-link: #6fbcdb;
  --color-link-hover: #979797;
  --color-link-focus: #979797;
  --color-link-disabled: #6fbcdb;
  --color-outline: #b4b4b4;
  --color-divider: #dfdfdf;
  --color-inverse-bg: #888888;
  --color-inverse-text: whitesmoke;
  --color-inverse-link: #cce7f2;
  --color-inverse-link-focus: #cce7f2;
  --color-inverse-link-hover: #cce7f2;
  --color-inverse-link-disabled: #cce7f2;
  --theme-bg: #fbfbfb;
  --theme-n2: #eeeeee;
  --theme-on: #6e6e6e;
  --theme-tint-red: 110;
  --theme-tint-green: 110;
  --theme-tint-blue: 110;
  --theme-on-c1: #979797;
  --theme-color: #6fbcdb;
  --theme-on-color: white;
  --theme-c1: #e3f2f8;
  --theme-divider: #dfdfdf;
  --theme-outline: #b4b4b4;
  --theme-inverse: #888888;
  --theme-on-inverse: whitesmoke;
  --theme-link-inverse: #cce7f2;
  --theme-link-inverse-hover: #cce7f2;
  --theme-link-inverse-focus: #cce7f2;
  --width-sidebar: 20rem;
  --height-header: 4rem;
  --height-footer: 4rem;
  --row-main: 1;
  --row-header: 1;
  --row-footer: 2;
  --column-main: 1;
  --column-sidebar: 1;
  --layout-display: block;
  --transition-fade: opacity 0.15s linear;
  --link-decoration: underline;
  --link-decoration-hover: underline;
  --border-width: 1px;
  --outline-width: calc(var(--border-width) * 2);
  --border-radius: 4px;
  --modal-filter: blur(0.25rem);
  --modal-bg: rgba(255, 255, 255, 0.7);
  --input-bg: var(--theme-n2);
  --input-label: var(--theme-on-c1);
  --input-icon: var(--theme-on-c1);
  --input-border: transparent;
  --input-active: var(--theme-on-c1);
  --input-value: var(--theme-on);
  --input-text: var(--theme-on-c1);
  --input-placeholder: calc(var(--theme-on-c1), .80);
  --input-autofill: var(--theme-n2);
  --modal-filter: blur(0.25rem);
  --modal-bg: rgba(255, 255, 255, 0.7);
  --busy-opacity: .5;
}
:root, :root :after {
  --theme-bg-red: 251;
  --theme-bg-green: 251;
  --theme-bg-blue: 251;
  --theme-bg-alt-red: 238;
  --theme-bg-alt-green: 238;
  --theme-bg-alt-blue: 238;
  --theme-on-red: 110;
  --theme-on-green: 110;
  --theme-on-blue: 110;
  --theme-on-alt-red: 151;
  --theme-on-alt-green: 151;
  --theme-on-alt-blue: 151;
  --theme-color-red: 111;
  --theme-color-green: 188;
  --theme-color-blue: 255;
  --theme-on-color-red: 255;
  --theme-on-color-green: 255;
  --theme-on-color-blue: 255;
  --theme-outline-red: 180;
  --theme-outline-green: 180;
  --theme-outline-blue: 180;
}
:root, :root :after {
  --opacity-hover: 0.08;
  --opacity-focus: 0.12;
  --opacity-pressed: 0.12;
  --opacity-busy: 0.5;
  --opacity-disabled: 0.38;
  --opacity-disabled-bg: 0.12;
  --opacity-elevation-1: 0.05;
  --opacity-elevation-2: 0.08;
  --opacity-elevation-3: 0.11;
  --opacity-elevation-4: 0.12;
  --opacity-elevation-5: 0.14;
  --opacity-elevation: 0;
}

*, *::before, *::after {
  box-sizing: border-box;
}

.-warning {
  --theme-bg: #fafafa;
  --theme-n2: #ededed;
  --theme-on: dimgray;
  --theme-tint-red: 105;
  --theme-tint-green: 105;
  --theme-tint-blue: 105;
  --theme-on-c1: #939393;
  --theme-color: #ecc757;
  --theme-on-color: white;
  --theme-c1: #fbf4df;
  --theme-divider: #dedede;
  --theme-outline: #b1b1b1;
  --theme-inverse: #848484;
  --theme-on-inverse: #f4f4f4;
  --theme-link-inverse: #f8ebc4;
  --theme-link-inverse-hover: #f8ebc4;
  --theme-link-inverse-focus: #f8ebc4;
}

.-danger {
  --theme-bg: #fbfbfb;
  --theme-n2: #efefef;
  --theme-on: #777777;
  --theme-tint-red: 119;
  --theme-tint-green: 119;
  --theme-tint-blue: 119;
  --theme-on-c1: #9d9d9d;
  --theme-color: #e57870;
  --theme-on-color: white;
  --theme-c1: #fae5e3;
  --theme-divider: #e1e1e1;
  --theme-outline: #b8b8b8;
  --theme-inverse: #909090;
  --theme-on-inverse: whitesmoke;
  --theme-link-inverse: #f6cfcc;
  --theme-link-inverse-hover: #f6cfcc;
  --theme-link-inverse-focus: #f6cfcc;
}

.-success {
  --theme-bg: #fafafa;
  --theme-n2: #ececec;
  --theme-on: #606060;
  --theme-tint-red: 96;
  --theme-tint-green: 96;
  --theme-tint-blue: 96;
  --theme-on-c1: #8d8d8d;
  --theme-color: #86b388;
  --theme-on-color: white;
  --theme-c1: #e8f0e8;
  --theme-divider: gainsboro;
  --theme-outline: #adadad;
  --theme-inverse: #7d7d7d;
  --theme-on-inverse: #f4f4f4;
  --theme-link-inverse: #d4e4d5;
  --theme-link-inverse-hover: #d4e4d5;
  --theme-link-inverse-focus: #d4e4d5;
}

.-minor {
  --theme-bg: #f9f9f9;
  --theme-n2: #e8e8e8;
  --theme-on: #3c3c3c;
  --theme-on-c1: #737373;
  --theme-color: #25e7d5;
  --theme-on-color: white;
  --theme-c1: #d5faf7;
  --theme-divider: #d4d4d4;
  --theme-outline: #9a9a9a;
  --theme-inverse: #5f5f5f;
  --theme-on-inverse: #f1f1f1;
  --theme-link-inverse: #b2f6f0;
  --theme-link-inverse-hover: #b2f6f0;
  --theme-link-inverse-focus: #b2f6f0;
  --theme-link-inverse-focus: #b2f6f0;
}
.-minor, .-minor:after {
  --theme-on-red: 110;
  --theme-on-green: 110;
  --theme-on-blue: 110;
  --theme-color-red: 111;
  --theme-color-green: 111;
  --theme-color-blue: 111;
  --theme-tint-red: 37;
  --theme-tint-green: 231;
  --theme-tint-blue: 213;
}

.-feature {
  --theme-bg: #fafafa;
  --theme-n2: #ececec;
  --theme-on: #636363;
  --theme-on-c1: #8f8f8f;
  --theme-color: #53bbe9;
  --theme-on-color: white;
  --theme-c1: #def2fb;
  --theme-divider: #dddddd;
  --theme-outline: #aeaeae;
  --theme-inverse: #7f7f7f;
  --theme-on-inverse: #f4f4f4;
  --theme-link-inverse: #c2e7f7;
  --theme-link-inverse-hover: #c2e7f7;
  --theme-link-inverse-focus: #c2e7f7;
}
.-feature, .-feature:after {
  --theme-tint-red: 99;
  --theme-tint-green: 99;
  --theme-tint-blue: 99;
}

.-default {
  --theme-bg: #fbfbfb;
  --theme-n2: #f0f0f0;
  --theme-on: #7e7e7e;
  --theme-tint-red: 126;
  --theme-tint-green: 126;
  --theme-tint-blue: 126;
  --theme-on-c1: #a2a2a2;
  --theme-color: #afafaf;
  --theme-on-color: white;
  --theme-c1: #f0f0f0;
  --theme-divider: #e3e3e3;
  --theme-outline: #bcbcbc;
  --theme-inverse: #969696;
  --theme-on-inverse: #f6f6f6;
  --theme-link-inverse: #e3e3e3;
  --theme-link-inverse-hover: #e3e3e3;
  --theme-link-inverse-focus: #e3e3e3;
}

.-warning, .-danger, .-success, .-major, .-minor, .-feature, .-default {
  --color-bg: var(--theme-bg);
  --color-text: var(--theme-on);
  --color-link: var(--theme-color);
  --color-link-hover: var(--theme-on-c1);
  --color-link-focus: var(--theme-on-c1);
  --color-link-disabled: rgba(var(--color-link), var(--opacity-disabled));
  --color-outline: var(--theme-outline);
  --color-divider: var(--theme-divider);
  --color-inverse-bg: var(--theme-inverse);
  --color-inverse-text: var(--theme-on-inverse);
  --color-inverse-link: var(--theme-link-inverse);
  --color-inverse-link-focus: var(--theme-link-inverse-focus);
  --color-inverse-link-hover: var(--theme-link-inverse-hover);
  --color-inverse-link-disabled: rgba(var(--color-inverse-link), var(--opacity-disabled));
}

.-none {
  --layout-display: none;
}

.-flex {
  --layout-display: flex;
}

.-grid {
  --layout-display: grid;
}

.-block {
  --layout-display: block;
}

.-inline {
  --layout-display: inline;
}

.-inline-flex {
  --layout-display: inline-flex;
}

.-inline-grid {
  --layout-display: inline-grid;
}

.-inline-block {
  --layout-display: inline-block;
}

html {
  font-size: var(--font-size-root);
  text-rendering: optimizeLegibility;
  -webkit-text-stroke-width: 0.2px;
}

body {
  background-color: var(--color-bg);
  color: var(--color-text);
  font-family: var(--font-normal);
  font-size: 1rem;
  font-weight: var(--font-weight-normal);
  line-height: var(--line-height-normal);
  margin: 0;
  -webkit-tap-highlight-color: rgba(0, 0, 0, 0);
  -webkit-text-size-adjust: 100%;
}

b, strong {
  font-weight: var(--font-weight-bold);
}

h1, h2, h3, h4, h5, h6, p, ol, ul, dl, pre {
  margin-top: 0;
}

pre, code, kbd, samp {
  font-family: var(--font-monospace);
  font-size: 1rem;
}

small {
  font-size: var(--font-size-sm);
}

article, aside, figcaption, figure, footer, header, hgroup, main, nav, section {
  display: block;
}

output {
  display: inline-block;
}

progress {
  vertical-align: baseline;
}

img, svg {
  vertical-align: middle;
}

svg {
  overflow: hidden;
}

summary {
  display: list-item;
  cursor: pointer;
}

template {
  display: none;
}

a {
  color: var(--color-link);
  text-decoration: var(--link-decoration);
}
a:hover {
  color: var(--color-link-hover);
  text-decoration: var(--link-hover-decoration);
}

body > main {
  width: 100%;
  margin-left: auto;
  margin-right: auto;
  padding: var(--padding-x);
}

button, *[role=button], .btn {
  --color-bg: var(--theme-bg);
  --color-outline: transparent;
  --color-link: var(--theme-color);
  --color-icon: var(--theme-color);
}
button:hover:after, *[role=button]:hover:after, .btn:hover:after {
  --color-tint-red: var(--theme-color-red);
  --color-tint-green: var(--theme-color-green);
  --color-tint-blue: var(--theme-color-blue);
}
button:focus:after, *[role=button]:focus:after, .btn:focus:after {
  --color-tint-red: var(--theme-color-red);
  --color-tint-green: var(--theme-color-green);
  --color-tint-blue: var(--theme-color-blue);
}
button[disabled]:not([disabled=false]), *[role=button][disabled]:not([disabled=false]), .btn[disabled]:not([disabled=false]) {
  --color-bg: rgba(var(--theme-on-red), var(--theme-on-green), var(--theme-on-blue), var(--opacity-disabled-bg));
  --color-link: rgba(var(--theme-on-red), var(--theme-on-green), var(--theme-on-blue), var(--opacity-disabled));
  --color-icon: rgba(var(--theme-on-red), var(--theme-on-green), var(--theme-on-blue), var(--opacity-disabled));
}
button[aria-pressed]:not([aria-pressed=false]):after, *[role=button][aria-pressed]:not([aria-pressed=false]):after, .btn[aria-pressed]:not([aria-pressed=false]):after {
  --color-tint-red: var(--theme-color-red);
  --color-tint-green: var(--theme-color-green);
  --color-tint-blue: var(--theme-color-blue);
}
button.-filled, *[role=button].-filled, .btn.-filled {
  --color-bg: var(--theme-color);
  --color-shadow: transparent;
  --color-outline: transparent;
  --color-text: var(--theme-on-color);
  --color-link: var(--theme-on-color);
  --color-icon: var(--theme-on-color);
}
button.-filled:hover:after, *[role=button].-filled:hover:after, .btn.-filled:hover:after {
  --color-tint-red: var(--theme-on-color-red);
  --color-tint-green: var(--theme-on-color-green);
  --color-tint-blue: var(--theme-on-color-blue);
}
button.-filled:focus:after, *[role=button].-filled:focus:after, .btn.-filled:focus:after {
  --color-tint-red: var(--theme-on-color-red);
  --color-tint-green: var(--theme-on-color-green);
  --color-tint-blue: var(--theme-on-color-blue);
}
button.-filled[aria-pressed]:not([aria-pressed=false]), *[role=button].-filled[aria-pressed]:not([aria-pressed=false]), .btn.-filled[aria-pressed]:not([aria-pressed=false]) {
  --color-shadow: transparent;
}
button.-filled[aria-pressed]:not([aria-pressed=false]):after, *[role=button].-filled[aria-pressed]:not([aria-pressed=false]):after, .btn.-filled[aria-pressed]:not([aria-pressed=false]):after {
  --color-tint-red: var(--theme-color-red);
  --color-tint-green: var(--theme-color-green);
  --color-tint-blue: var(--theme-color-blue);
}
button.-outline, dialog > article button, *[role=button].-outline, .btn.-outline {
  --color-bg: var(--theme-bg);
  --color-shadow: transparent;
  --color-outline: var(--theme-outline);
  --color-text: var(--theme-color);
  --color-link: var(--theme-color);
  --color-icon: var(--theme-color);
}
button.-outline[disabled]:not([disabled=false]), dialog > article button[disabled]:not([disabled=false]), *[role=button].-outline[disabled]:not([disabled=false]), .btn.-outline[disabled]:not([disabled=false]) {
  --color-outline: rgba(var(--theme-on-red), var(--theme-on-green), var(--theme-on-blue), var(--opacity-disabled-bg));
}
button.-outline:hover, dialog > article button:hover, *[role=button].-outline:hover, .btn.-outline:hover {
  --color-shadow: transparent;
  --color-outline: var(--theme-color);
}
button.-outline:focus, dialog > article button:focus, *[role=button].-outline:focus, .btn.-outline:focus {
  --color-outline: var(--theme-color);
}
button.-outline[aria-pressed]:not([aria-pressed=false]), dialog > article button[aria-pressed]:not([aria-pressed=false]), *[role=button].-outline[aria-pressed]:not([aria-pressed=false]), .btn.-outline[aria-pressed]:not([aria-pressed=false]) {
  --color-shadow: transparent;
}
button.-flat, *[role=button].-flat, .btn.-flat {
  --color-shadow: none;
  --color-outline: none;
  --color-bg: transparent;
}
button.-flat:hover, *[role=button].-flat:hover, .btn.-flat:hover {
  --color-shadow: transparent;
}
button.-flat:focus, *[role=button].-flat:focus, .btn.-flat:focus {
  --color-shadow: transparent;
}
button.-flat[aria-pressed]:not([aria-pressed=false]), *[role=button].-flat[aria-pressed]:not([aria-pressed=false]), .btn.-flat[aria-pressed]:not([aria-pressed=false]) {
  --color-shadow: transparent;
}

button, button.-native {
  position: relative;
  border-radius: 0;
}
button:focus, button.-native:focus {
  outline: 1px dotted;
  outline: 5px auto -webkit-focus-ring-color;
}

button, a.btn, a[role=button], a[role=menuitem], dialog[role=navigation] a {
  border: var(--border-width) solid var(--color-outline);
  background-color: var(--color-bg);
  border-radius: var(--border-radius);
  color: var(--color-link);
  display: inline-flex;
  flex-flow: row nowrap;
  justify-content: center;
  align-items: center;
  font-weight: var(--font-weight-medium);
  font-size: var(--font-size-input);
  line-height: var(--line-height-input);
  white-space: nowrap;
  align-content: center;
  user-select: none;
  appearance: none;
  position: relative;
  overflow: hidden;
  font-family: var(--font-normal);
  cursor: default;
  transition: box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1), -webkit-box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);
  padding: var(--input-padding-y) var(--input-padding-x);
  box-shadow: var(--btn-shadow);
  letter-spacing: 0.04em;
  position: relative;
}
button > svg, a.btn > svg, a[role=button] > svg, a[role=menuitem] > svg, dialog[role=navigation] a > svg {
  color: var(--color-icon);
}
button:hover, a.btn:hover, a[role=button]:hover, a[role=menuitem]:hover, dialog[role=navigation] a:hover {
  cursor: pointer;
}
button:after, a.btn:after, a[role=button]:after, a[role=menuitem]:after, dialog[role=navigation] a:after {
  display: inline-block;
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  content: " ";
  pointer-events: none;
}
button:hover:after, a.btn:hover:after, a[role=button]:hover:after, a[role=menuitem]:hover:after, dialog[role=navigation] a:hover:after {
  background-color: rgba(var(--color-tint-red), var(--color-tint-green), var(--color-tint-blue), var(--opacity-hover));
}
button[disabled]:not([disabled=false]), a.btn[disabled]:not([disabled=false]), a[role=button][disabled]:not([disabled=false]), a[role=menuitem][disabled]:not([disabled=false]), dialog[role=navigation] a[disabled]:not([disabled=false]) {
  cursor: not-allowed;
}
button .-block, a.btn .-block, a[role=button] .-block, a[role=menuitem] .-block, dialog[role=navigation] a .-block {
  flex-grow: 1;
  width: 100%;
}
button .-block + button .-block.-block, button .-block + a.btn .-block.-block, button .-block + a[role=button] .-block.-block, button .-block + a[role=menuitem] .-block.-block, button .-block + dialog[role=navigation] a .-block.-block, a.btn .-block + button .-block.-block, a.btn .-block + a.btn .-block.-block, a.btn .-block + a[role=button] .-block.-block, a.btn .-block + a[role=menuitem] .-block.-block, a.btn .-block + dialog[role=navigation] a .-block.-block, a[role=button] .-block + button .-block.-block, a[role=button] .-block + a.btn .-block.-block, a[role=button] .-block + a[role=button] .-block.-block, a[role=button] .-block + a[role=menuitem] .-block.-block, a[role=button] .-block + dialog[role=navigation] a .-block.-block, a[role=menuitem] .-block + button .-block.-block, a[role=menuitem] .-block + a.btn .-block.-block, a[role=menuitem] .-block + a[role=button] .-block.-block, a[role=menuitem] .-block + a[role=menuitem] .-block.-block, a[role=menuitem] .-block + dialog[role=navigation] a .-block.-block, dialog[role=navigation] a .-block + button .-block.-block, dialog[role=navigation] a .-block + a.btn .-block.-block, dialog[role=navigation] a .-block + a[role=button] .-block.-block, dialog[role=navigation] a .-block + a[role=menuitem] .-block.-block, dialog[role=navigation] a .-block + dialog[role=navigation] a .-block.-block {
  margin-top: var(--input-padding-y);
}
button.-compact, a.btn.-compact, a[role=button].-compact, a[role=menuitem].-compact, dialog[role=navigation] a.-compact {
  --input-padding-x: calc(var(--input-padding-x) / 2);
}
button.-dense, a.btn.-dense, a[role=button].-dense, a[role=menuitem].-dense, dialog[role=navigation] a.-dense {
  letter-spacing: 0;
}
button.-lg, a.btn.-lg, a[role=button].-lg, a[role=menuitem].-lg, dialog[role=navigation] a.-lg {
  --font-size-input: 1.25rem;
}
button.-sm, a.btn.-sm, a[role=button].-sm, a[role=menuitem].-sm, dialog[role=navigation] a.-sm {
  --font-size-input: 0.85rem;
  --input-padding-x: 0.5rem;
}
button.-xs, a.btn.-xs, a[role=button].-xs, a[role=menuitem].-xs, dialog[role=navigation] a.-xs {
  --font-size-input: 0.85rem;
  --input-padding-x: 0.25rem;
  letter-spacing: 0;
}
button.-flat, button.-outline, dialog > article button, a.btn.-flat, a.btn.-outline, a[role=button].-flat, a[role=button].-outline, a[role=menuitem].-flat, a[role=menuitem].-outline, dialog[role=navigation] a.-flat, dialog[role=navigation] a.-outline {
  transition: background-color 0.15s ease-in-out, border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out !important;
}

input[type=submit].-block,
input[type=reset].-block,
input[type=button].-block {
  width: 100%;
}

a.btn[disabled], a.btn.disabled, a[role=button][disabled], a[role=button].disabled, fieldset[disabled] a[role=button], fieldset[disabled] a.btn.disabled {
  pointer-events: none;
}

button.-native {
  all: initial;
  border-radius: 0;
}
button.-native:focus {
  outline: 1px dotted;
  outline: 5px auto -webkit-focus-ring-color;
}

button:has(> svg:first-child):not(.-icon), *[role=button]:has(> svg:first-child):not(.-icon), .btn:has(> svg:first-child):not(.-icon) {
  display: inline-grid;
  grid-template-columns: min-content 1fr;
  grid-gap: var(--input-padding-x);
}
button.-icon > span:not(:focus):not(:active), *[role=button].-icon > span:not(:focus):not(:active), .btn.-icon > span:not(:focus):not(:active) {
  clip: rect(0 0 0 0);
  clip-path: inset(100%);
  height: 1px;
  overflow: hidden;
  position: absolute;
  white-space: nowrap;
  width: 1px;
}

a[role=button], a[role=button]:hover, a[role=button]:focus {
  text-decoration: none;
}

*[class^=layout-] {
  display: var(--layout-display);
}

body {
  grid-template-rows: var(--height-header) 1fr var(--height-footer);
  grid-template-columns: min-content 1fr;
  min-height: 100vh;
  transition: all 0.2s ease-in-out;
}

body:has(dialog[role=navigation]) {
  --column-main: 2;
  --column-header: span 2;
  --column-footer: span 2;
}

body main + footer {
  --row-footer: 2;
}
body > header ~ main {
  --row-main: 2;
}
body > header ~ main + footer {
  --row-footer: 3;
}
body > header + dialog[role=navigation] {
  --row-sidebar: 2;
}

body {
  display: grid;
}
body > header {
  grid-row: var(--row-header);
  grid-column: var(--column-header);
}
body > footer {
  grid-row: var(--row-footer);
  grid-column: var(--column-footer);
}
body main {
  position: relative;
  grid-column: var(--column-main);
  grid-row: var(--row-main);
  padding: var(--spacer);
}
body dialog[role=navigation] {
  grid-column: var(--column-sidebar);
  grid-row: var(--row-sidebar);
}
body dialog[role=navigation] > nav {
  grid-column: var(--column-sidebar);
  min-width: var(--drawer-width);
}

[aria-hidden=true], [hidden] {
  display: none !important;
}

article, article:after {
  --color-bg: var(--theme-bg);
  --color-text: var(--theme-on);
  --color-link: var(--theme-link);
  --color-link-hover: rgba(var(--color-link), .88);
  --color-link-focus: rgba(var(--color-link), .92);
  --color-outline: var(--theme-outline);
  --article-tint: rgba(var(--theme-tint-red),var(--theme-tint-green),var(--theme-tint-blue), var(--opacity-elevation));
  --article-bg-disabled: rgba(var(--theme-bg), .38);
  --article-shadow: var(--theme-shadow);
  --article-outline: var(--theme-outline);
}

article {
  position: relative;
  display: flex;
  flex-direction: column;
  box-sizing: border-box;
  padding: var(--padding-y) var(--padding-x);
  color: var(--color-text);
  border: var(--border-width) solid var(--color-outline);
  border-radius: var(--border-radius);
  background-color: var(--color-bg);
  box-shadow: none;
  row-gap: var(--padding-y);
  position: relative;
}
article.-action {
  cursor: pointer;
}
article:after {
  display: inline-block;
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  content: " ";
  pointer-events: none;
  --opacity-elevation: 0.05;
  background-color: var(--article-tint);
}

article > header, article > footer, article > div {
  padding-left: var(--padding-x);
  padding-right: var(--padding-x);
  margin: 0 calc(var(--padding-x) * -1);
  min-height: 0;
}
article > header:first-child, article > footer:first-child, article > div:first-child {
  border-top-left-radius: inherit;
  border-top-right-radius: inherit;
  margin-top: calc(var(--padding-y) * -1);
  padding-top: var(--padding-y);
}
article > header:last-child, article > footer:last-child, article > div:last-child {
  border-bottom-left-radius: inherit;
  border-bottom-right-radius: inherit;
  margin-bottom: calc(var(--padding-y) * -1);
  padding-bottom: var(--padding-x);
}

article + article {
  margin-top: var(--padding-y);
}

table {
  --color-bg: var(--theme-bg);
  --color-text: var(--theme-on);
  --color-icon: var(--theme-on);
  --color-outline: var(--theme-outline);
  --color-emphasis: var(--theme-on-c1);
  border: var(--border-width) solid var(--color-outline);
  border-radius: var(--border-radius);
  border-collapse: collapse;
  color: black;
  min-width: 100%;
  table-layout: fixed;
  white-space: nowrap;
}
table, table:after {
  --color-tint-red: var(--theme-on-red);
  --color-tint-green: var(--theme-on-green);
  --color-tint-blue: var(--theme-on-blue);
}
table:not(caption) > thead > tr > *, table:not(caption) > tbody > tr > *, table:not(caption) > tr > * {
  background-color: var(--color-bg);
  color: var(--color-text);
  border-bottom: var(--border-width) solid var(--color-outline);
  padding-top: var(--padding-y);
  padding-bottom: var(--padding-y);
  padding-left: var(--padding-x);
  padding-right: var(--padding-x);
  vertical-align: middle;
}
table .-left {
  text-align: left;
}
table .-right, table .-numeric {
  text-align: right;
}
table .-center {
  text-align: center;
}
table:not(.-hoverless) > tbody > tr:hover > td {
  background-color: rgba(var(--color-tint-red), var(--color-tint-green), var(--color-tint-blue), var(--opacity-hover));
}
table > thead > tr > * {
  --table-color: var(--table-em);
  border-bottom: calc(var(--border-width) * 2) solid var(--color-outline);
  font-weight: var(--font-weight-medium);
}
table > thead > tr > * > label {
  margin-bottom: 0;
}
table > thead > tr > * > label[data-sort] {
  cursor: pointer;
  font-weight: var(--font-weight-bold);
}
table > thead > tr > * > label[data-sort].-active {
  --color-text: var(--color-emphasis);
}
table > thead > tr > * > label[data-sort]:before {
  color: var(--color-text);
  content: "↓";
}

table[role=grid] tbody tr:nth-child(odd) > * {
  background-color: rgba(var(--color-tint-red), var(--color-tint-green), var(--color-tint-blue), calc(var(--opacity-hover) * 2));
}

article > table, details > table {
  background-color: transparent;
  margin-left: calc(var(--padding-x) * -1);
  margin-right: calc(var(--padding-x) * -1);
  border-width: 0;
  table-layout: auto;
  width: calc(100% + 2 * var(--padding-x));
}
article > table:first-child, details > table:first-child {
  border-top-left-radius: var(--border-radius);
  border-top-right-radius: var(--border-radius);
  margin-top: calc(var(--padding-y) * -1);
}
article > table:first-child > *:first-child, details > table:first-child > *:first-child {
  border-top-left-radius: var(--border-radius);
  border-top-right-radius: var(--border-radius);
}
article > table:last-child, details > table:last-child {
  border-bottom-left-radius: var(--border-radius);
  border-bottom-right-radius: var(--border-radius);
  margin-bottom: calc(var(--padding-y) * -1);
}
article > table:last-child > *:last-child, details > table:last-child > *:last-child {
  border-bottom-left-radius: var(--border-radius);
  border-bottom-right-radius: var(--border-radius);
  border-bottom-width: 0;
}
article > table:not(caption) > thead > tr > *, article > table:not(caption) > tbody > tr > *, article > table:not(caption) > tr > *, details > table:not(caption) > thead > tr > *, details > table:not(caption) > tbody > tr > *, details > table:not(caption) > tr > * {
  background-color: transparent;
}
article > table:not(caption) > thead > tr:last-child, article > table:not(caption) > tbody > tr:last-child > *, article > table:not(caption) > tr:last-child > *, details > table:not(caption) > thead > tr:last-child, details > table:not(caption) > tbody > tr:last-child > *, details > table:not(caption) > tr:last-child > * {
  border-bottom-width: 0;
}

:where(svg:not([fill])) {
  fill: currentColor;
}

svg:not(:root) {
  overflow: hidden;
}

svg[role=img] {
  width: var(--icon-size);
  height: var(--icon-size);
}

dialog {
  display: flex;
  flex-direction: column;
  z-index: 999;
  position: fixed;
  width: 100%;
  height: 100%;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  align-items: center;
  justify-content: center;
  min-width: 100%;
  padding: 1rem;
  border: 0;
  backdrop-filter: var(--modal-filter);
  background-color: var(--modal-bg);
}

dialog:not([open]), dialog[open=false] {
  display: none !important;
}

dialog > article {
  min-width: 200px;
  display: flex;
  flex-direction: column;
}

dialog > article > header {
  margin: calc(var(--padding-y) * -1) calc(var(--padding-y) * -1) 0 calc(var(--padding-y) * -1);
  padding: var(--padding-y) calc(var(--padding-x) / 4);
  text-align: center;
}

dialog > article > footer {
  margin: 0 calc(var(--padding-y) * -1) calc(var(--padding-y) * -1) calc(var(--padding-y) * -1);
  padding: var(--padding-y) calc(var(--padding-x) / 4);
  text-align: right;
}

[role=tablist] {
  --color-outline: var(--theme-outline);
  --color-bg: transparent;
}

*[role=tab], [role=tablist] > *[role=button] {
  --color-bg: transparent;
  --color-link: var(--theme-on-c1);
  --color-icon: var(--theme-on-c1);
  --color-outline: transparent;
  --color-bg-active: transparent;
  --color-shadow: transparent;
  --tab-border-width: 0;
  --tab-border-width-bottom: calc(var(--border-width) * 2);
}
*[role=tab][aria-selected]:not([aria-selected=false]), [role=tablist] > *[role=button][aria-selected]:not([aria-selected=false]) {
  --color-bg: transparent;
  --color-link: var(--theme-color);
  --color-icon: var(--theme-color);
  --color-outline: var(--theme-color);
}

.-pills *[role=tab], .-pills [role=tablist] > *[role=button] {
  --color-bg: var(--theme-c1);
  --color-link: var(--theme-on-c1);
  --color-icon: var(--theme-on-c1);
  --color-outline: transparent;
  --color-shadow: transparent;
  --tab-border-width: var(--border-width);
  --tab-border-width-bottom: var(--border-width);
}
.-pills *[role=tab][aria-selected]:not([aria-selected=false]), .-pills [role=tablist] > *[role=button][aria-selected]:not([aria-selected=false]) {
  --color-bg: var(--theme-color);
  --color-link: var(--theme-on-color);
  --color-icon: var(--theme-on-color);
  --color-outline: var(--theme-color);
}

nav a, a[role=menuitem] {
  text-decoration: none;
}
nav a:hover, a[role=menuitem]:hover {
  text-decoration: none;
}

nav[role=tablist] {
  width: 100%;
  padding: 0 var(--padding-x);
  border-bottom: var(--border-width) solid var(--color-outline);
}
nav[role=tablist] *[role=tab] {
  position: relative;
  bottom: -1px;
  border-radius: var(--border-radius) var(--border-radius) 0 0;
  border-width: var(--tab-border-width);
  border-bottom: var(--tab-border-width-bottom) solid var(--color-outline);
  outline: none;
  text-transform: var(--ui-transform);
}

nav[role=tablist].-pills, .-pills nav[role=tablist] {
  padding: var(--padding-y) var(--padding-x);
  border-bottom: none;
}
nav[role=tablist].-pills *[role=tab], .-pills nav[role=tablist] *[role=tab] {
  bottom: 0;
  border: var(--tab-border-width) solid var(--color-outline);
  padding-top: calc(var(--padding-y) / 2);
  padding-bottom: calc(var(--padding-y) / 2);
  border-radius: calc(var(--padding-x) + var(--padding-y));
}

nav[role=tablist].-filled *[role=tab], .-filled nav[role=tablist] *[role=tab] {
  border-width: 0 0 var(--tab-border-width) 0;
}

nav[role=tablist] ~ *[role=tabpanel][hidden] {
  display: none;
}
nav[role=tablist] ~ *[role=tabpanel] + *[role=tabpanel] {
  margin-top: 0;
}

article[role=tabpanel] {
  border-top-width: 0;
  border-top-left-radius: 0;
  border-top-right-radius: 0;
  box-shadow: none;
  transition: var(--transition-fade);
}

nav ul[role=menubar] {
  display: flex;
  flex-flow: row nowrap;
  margin-bottom: 0;
  padding: 0;
  list-style: none;
  column-gap: calc(var(--spacer) * 1.5);
}
nav ul[role=menubar] li {
  display: inline-block;
}
nav ul[role=menubar] button[role=menuitem], nav ul[role=menubar] a[role=menuitem] {
  display: inline-flex;
  align-items: center;
}

nav.dropdown {
  position: relative;
}

dialog[role=menu] {
  --color-bg: transparent;
  --color-text: var(--theme-on);
  --color-divider: var(--theme-divider);
}
dialog[role=menu]:after {
  --opacity-elevation: var(--opacity-elevation-2);
  --color-tint-red: var(--theme-color-red);
  --color-tint-blue: var(--theme-color-blue);
  --color-tint-green: var(--theme-color-green);
}
dialog[role=menu] > * {
  --color-bg: var(--theme-bg);
  --color-icon: var(--theme-color);
  --color-link: var(--theme-link);
  --color-text: var(--theme-on);
  --color-outline: var(--theme-outline);
}
dialog[role=menu] > *:after {
  --color-tint-red: var(--theme-on-red);
  --color-tint-blue: var(--theme-on-blue);
  --color-tint-green: var(--theme-on-green);
}

dialog[role=menu] {
  display: grid;
  grid-template-columns: auto;
  /*   grid-template-rows: repeat(auto-fill, minmax(min-content, 4rem)); */
  z-index: 999;
  position: absolute !important;
  left: 0;
  right: unset;
  top: calc(100% + var(--border-width));
  bottom: unset;
  margin: 1px 0 0 0;
  height: auto;
  /*   min-width: 100px; */
  /*   max-width: 50vw; */
  justify-content: end;
  align-items: start;
  padding: 0;
  overflow: hidden;
  background-color: var(--color-bg);
  backdrop-filter: none;
  position: relative;
}
dialog[role=menu]:after {
  display: inline-block;
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  content: " ";
  pointer-events: none;
  background-color: rgba(var(--color-tint-red), var(--color-tint-green), var(--color-tint-blue), var(--opacity-elevation));
}
dialog[role=menu] > * {
  position: relative;
  border-width: 0 var(--border-width);
  box-shadow: none;
  text-align: left;
  margin: 0;
  min-width: 0;
  width: 100%;
  font-weight: var(--font-weight-normal);
  font-size: var(--font-size);
  padding: var(--padding-y) var(--padding-x);
  border-radius: 0;
  z-index: 123456;
}
dialog[role=menu] > *:first-child {
  border-top-width: var(--border-width);
  border-top-left-radius: var(--border-radius);
  border-top-right-radius: var(--border-radius);
}
dialog[role=menu] > *:last-child {
  border-bottom-width: var(--border-width);
  border-bottom-left-radius: var(--border-radius);
  border-bottom-right-radius: var(--border-radius);
}
dialog[role=menu] > h3, dialog[role=menu] > h4, dialog[role=menu] > h5 {
  border-style: solid;
  border-color: var(--color-outline);
  background-color: var(--color-bg);
  color: var(--color-text);
  font-weight: var(--font-weight-bold);
  font-size: var(--font-size-sm);
  text-transform: uppercase;
}
dialog[role=menu] > a[role=menuitem], dialog[role=menu] > button[role=menuitem] {
  --icon-size: .9rem;
  display: grid;
  grid-template-rows: 1fr;
  grid-template-columns: var(--icon-size) 1fr;
  column-gap: var(--padding-x);
  align-items: center;
}

nav[aria-label=breadcrumb] {
  font-size: var(--font-size-sm);
  font-weight: var(--font-weight-medium);
  text-transform: var(--ui-transform);
}
nav[aria-label=breadcrumb] ol {
  margin: 0;
  list-style: none;
  display: grid;
  align-items: center;
  justify-content: start;
  grid-template-columns: repeat(auto-fit, minmax(2rem, max-content));
  grid-template-rows: 1fr;
}
nav[aria-label=breadcrumb] ol li:not(:first-child) {
  margin-inline-start: var(--padding-x);
}
nav[aria-label=breadcrumb] ol li:not(:last-child) {
  padding-right: 1rem;
}
nav[aria-label=breadcrumb] ol li:not(:last-child)::after {
  position: absolute;
  width: 1rem;
  margin-inline-start: calc(var(--padding-x) / 2);
  content: "/";
  color: var(--muted-color);
  text-align: center;
}
nav[aria-label=breadcrumb] a[aria-current] {
  background-color: transparent;
  color: inherit;
  text-decoration: none;
  pointer-events: none;
}

details > summary + * {
  margin-top: var(--padding-y);
}

details.accordion, details:has(summary[role=button]) {
  border: var(--border-width) solid var(--color-outline);
  background-color: var(--color-bg);
  border-top-left-radius: var(--border-radius);
  border-top-right-radius: var(--border-radius);
  padding: var(--padding-y) var(--padding-x);
}
details.accordion + details, details:has(summary[role=button]) + details {
  border-top-left-radius: 0;
  border-top-right-radius: 0;
  border-top-width: 0;
}

label {
  display: inline-block;
  color: var(--input-label);
  font-size: var(--label-font-size);
}

button {
  border-radius: 0;
}
button:focus {
  outline: 1px dotted;
  outline: 5px auto -webkit-focus-ring-color;
}

input, textarea, select {
  --color-text: var(--theme-on-c1);
  --color-bg: var(--theme-n2);
  --color-outline: var(--theme-outline);
  --color-icon: var(--theme-on-c1);
  --color-value: var(--theme-on);
  --color-placeholder: var(--theme-on-c1);
  --color-autofill: var(--theme-n2);
  --color-bg-disabled: rgba(var(--theme-bg-alt-red), var(--theme-bg-alt-green), var(--theme-bg-alt-blue), var(--opacity-disabled-bg));
  --color-autofill-disabled: rgba(var(--theme-bg-alt-red), var(--theme-bg-alt-green), var(--theme-bg-alt-blue), var(--opacity-disabled-bg));
  --color-text-disabled: rgba(var(--theme-on-alt-red), var(--theme-on-alt-green), var(--theme-on-alt-blue), var(--opacity-disabled));
  --color-placeholder-disabled: rgba(var(--theme-on-alt-red), var(--theme-on-alt-green), var(--theme-on-alt-blue), var(--opacity-disabled));
  --color-outline-disabled: rgba(var(--theme-outline-red), var(--theme-outline-green), var(--theme-outline-blue), var(--opacity-disabled-bg));
}
input:focus, textarea:focus, select:focus {
  --color-outline: var(--theme-color);
}

label {
  --color-label: var(--theme-on-c1);
  --color-label-disabled: rgba(var(--theme-on-alt-red), var(--theme-on-alt-green), var(--theme-on-alt-blue), var(--opacity-disabled));
}

input, textarea, button, select, optgroup {
  margin: 0;
  font-family: inherit;
  font-size: inherit;
  line-height: inherit;
}

input, textarea, select, form .wrapper {
  color: var(--color-value);
  background-color: var(--color-bg);
  font-size: var(--input-font-size);
  line-height: var(--input-line-height);
  padding: var(--input-padding-y) var(--input-padding-x);
  font-weight: var(--font-weight-normal);
  border-radius: var(--border-radius);
  border: var(--border-width) solid var(--color-outline);
  box-shadow: none;
  width: var(--input-width);
}

input:disabled, fieldset[disabled] input, textarea:disabled, fieldset[disabled] textarea, select:disabled, fieldset[disabled] select {
  color: var(--color-value-disabled);
  background-color: var(--color-bg-disabled);
  border-color: var(--color-outline-disabled);
  opacity: 1;
}
input:disabled, input fieldset[disabled], textarea:disabled, textarea fieldset[disabled], select:disabled, select fieldset[disabled] {
  cursor: not-allowed;
}
input:disabled + label, fieldset[disabled] input + label, textarea:disabled + label, fieldset[disabled] textarea + label, select:disabled + label, fieldset[disabled] select + label {
  color: var(--color-label-disabled);
}
input:focus, textarea:focus, select:focus {
  outline-color: var(--color-outline) !important;
}

input::-webkit-input-placeholder, textarea::-webkit-input-placeholder {
  color: var(--color-placeholder);
  font-weight: var(--font-weight-light);
}
input::-moz-placeholder, textarea::-moz-placeholder {
  color: var(--color-placeholder);
  font-weight: var(--font-weight-light);
}
input:-ms-input-placeholder, textarea:-ms-input-placeholder {
  color: var(--color-placeholder);
  font-weight: 300;
}
input:-ms-input-placeholder, textarea:-ms-input-placeholder {
  color: var(--color-placeholder);
  font-weight: var(--font-weight-light);
}
input::placeholder, textarea::placeholder {
  color: var(--color-placeholder);
  font-weight: var(--font-weight-light);
}

textarea {
  overflow: auto;
  resize: vertical;
}

label, fieldset:has(input[type=checkbox]) > legend, fieldset:has(input[type=radio]) > legend {
  font-size: var(--font-size-sm);
  font-weight: var(--font-weight-medium);
  text-transform: uppercase;
  padding: 0 var(--input-padding-x);
}

input[type=checkbox] + label, input[type=radio] + label {
  font-size: var(--font-size);
  font-weight: var(--font-weight-normal);
  text-transform: initial;
}

input:-webkit-autofill {
  -webkit-box-shadow: 0 0 0px 1000px var(--color-bg-autofill) inset;
}

:root {
  --label-column: 1;
  --label-row: 1;
  --input-column: 1;
  --input-row: 1;
  --extra-row: auto;
  --extra-column: 1;
  --label-font-size: .7rem;
}

.-vertical, .-horizontal, .-float {
  --label-font-size: var(--input-font-size);
}

.-horizontal {
  --input-column: 2;
  --input-row: auto;
  --label-row: auto;
  --extra-column: 2;
}

.-float {
  --label-font-size: var(--input-font-size);
}

.-vertical {
  --input-row: 2;
}

form {
  display: grid;
  grid-template-columns: 1fr;
  grid-template-rows: repeat(auto-fill, minmax(var(--input-line-height), max-content));
  row-gap: var(--padding-y);
  column-gap: var(--padding-x);
}

form > section, form > fieldset {
  border: var(--border-width) solid var(--color-outline);
  border-radius: var(--border-radius);
  background-color: rgba(0, 0, 0, 0.04);
  padding: calc(var(--input-padding-y) * 2) var(--input-padding-x);
  margin-bottom: var(--input-padding-y);
}

form .field > input, form .field > select, form .field > textarea, form .field > .wrapper {
  --color-value: var(--theme-on);
  --color-text: var(--theme-on-c1);
  --color-bg: var(--theme-n2);
  --color-text: var(--theme-on-c1);
  --color-label: var(--theme-on-c1);
  --color-icon: var(--theme-on-c1);
}
form .field > input:focus, form .field > select:focus, form .field > textarea:focus, form .field > .wrapper:focus-within {
  --color-outline: var(--theme-color);
}
form .field > input:focus ~ label, form .field > select:focus ~ label, form .field > textarea:focus ~ label, form .field > .wrapper:focus-within ~ label {
  --color-label: var(--theme-color);
}

form .field {
  position: relative;
  display: grid;
  grid-template-columns: 1fr;
  grid-template-rows: repeat(auto-fit, minmax(1rem, auto));
  column-gap: var(--padding-x);
  row-gap: calc(var(--padding-y) / 4);
  margin-bottom: 0;
  border-radius: var(--border-radius);
  border-bottom-left-radius: 0;
  border-bottom-right-radius: 0;
  min-height: calc(var(--input-height) + var(--label-height));
}
form .field > label, form .field > legend {
  grid-row: var(--label-row);
  grid-column: var(--label-column);
  color: var(--color-label);
  align-self: start;
}
form .field > input, form .field > textarea, form .field > select, form .field > .wrapper {
  height: calc(var(--input-height) + var(--label-height));
  padding-top: var(--label-height);
  background-color: var(--color-bg);
  align-self: end;
  border: var(--border-width) solid var(--color-outline);
  border-width: 0 0 var(--border-width) 0;
  border-bottom-left-radius: 0;
  border-bottom-right-radius: 0;
  grid-row: var(--input-row);
  grid-column: var(--input-column);
  padding-bottom: calc(var(--input-padding-y) / 2);
}
form .field > input:focus:not(:focus-visible), form .field > textarea:focus:not(:focus-visible), form .field > select:focus:not(:focus-visible), form .field > .wrapper:focus:not(:focus-visible) {
  outline: none;
}
form .field > input:focus-visible, form .field > textarea:focus-visible, form .field > select:focus-visible, form .field > .wrapper:focus-visible {
  outline-color: var(--color-outline);
}
form .field > .error, form .field > .help, form .field > .text {
  grid-row: var(--extra-row);
  grid-column: var(--extra-column);
  padding: 0 var(--input-padding-x);
  font-size: var(--font-size-sm);
}
form .field > .error {
  color: var(--input-error);
}
form .field > .help:not(a) {
  color: var(--input-help);
}

form .field {
  position: relative;
}
form .field > label {
  overflow: hidden;
  text-align: start;
  text-overflow: ellipsis;
  font-size: var(--label-font-size);
  white-space: nowrap;
  transform-origin: 0 0;
  transition: opacity 0.1s ease-in-out, transform 0.1s ease-in-out;
  padding: var(--input-padding-y) var(--input-padding-x) 0 var(--input-padding-x);
  margin: var(--border-width);
}

form.-outline .field, .field.-outline, dialog > article button.field,
form.-vertical .field, .field.-vertical,
form.-horizontal .field, .field.-horizontal {
  background-color: transparent;
}
form.-outline .field > input, form.-outline .field > textarea, form.-outline .field > select, form.-outline .field > .wrapper, .field.-outline > input, dialog > article button.field > input, .field.-outline > textarea, dialog > article button.field > textarea, .field.-outline > select, dialog > article button.field > select, .field.-outline > .wrapper, dialog > article button.field > .wrapper,
form.-vertical .field > input,
form.-vertical .field > textarea,
form.-vertical .field > select,
form.-vertical .field > .wrapper, .field.-vertical > input, .field.-vertical > textarea, .field.-vertical > select, .field.-vertical > .wrapper,
form.-horizontal .field > input,
form.-horizontal .field > textarea,
form.-horizontal .field > select,
form.-horizontal .field > .wrapper, .field.-horizontal > input, .field.-horizontal > textarea, .field.-horizontal > select, .field.-horizontal > .wrapper {
  background-color: var(--color-bg);
  border-width: var(--border-width);
  border-radius: var(--border-radius);
}

form.-vertical .field, .field.-vertical,
form.-horizontal .field, .field.-horizontal {
  height: auto;
}
form.-vertical .field > input, form.-vertical .field > textarea, form.-vertical .field > select, form.-vertical .field > .wrapper, .field.-vertical > input, .field.-vertical > textarea, .field.-vertical > select, .field.-vertical > .wrapper,
form.-horizontal .field > input,
form.-horizontal .field > textarea,
form.-horizontal .field > select,
form.-horizontal .field > .wrapper, .field.-horizontal > input, .field.-horizontal > textarea, .field.-horizontal > select, .field.-horizontal > .wrapper {
  padding: var(--input-padding-y) var(--input-padding-x);
  height: var(--input-height);
}

form.-float .field, form .field.-float {
  height: auto;
}
form.-float .field > label, form .field.-float > label {
  position: absolute;
  top: 0;
  left: 0;
  padding: 0 var(--input-padding-x);
  height: 100%;
  align-items: center;
  display: inline-flex;
}
form.-float .field > input, form.-float .field > textarea, form.-float .field > select, form.-float .field > .wrapper, form .field.-float > input, form .field.-float > textarea, form .field.-float > select, form .field.-float > .wrapper {
  height: var(--input-height);
  padding: var(--input-padding-y) var(--input-padding-x);
}
form.-float .field > input, form.-float .field > textarea, form .field.-float > input, form .field.-float > textarea {
  direction: rtl;
}
form.-float .field > input:focus, form.-float .field > input:not(:placeholder-shown), form.-float .field > textarea:focus, form.-float .field > textarea:not(:placeholder-shown), form .field.-float > input:focus, form .field.-float > input:not(:placeholder-shown), form .field.-float > textarea:focus, form .field.-float > textarea:not(:placeholder-shown) {
  direction: ltr;
}

form.-float .field > input:focus ~ label,
form.-float .field > textarea:focus ~ label,
form.-float .field > .wrapper:focus-within ~ label,
form.-float .field > input:not(:placeholder-shown) ~ label,
form.-float .field > textarea:not(:placeholder-shown) ~ label,
form.-float .field > select ~ label, form .field.-float > input:focus ~ label,
form .field.-float > textarea:focus ~ label,
form .field.-float > .wrapper:focus-within ~ label,
form .field.-float > input:not(:placeholder-shown) ~ label,
form .field.-float > textarea:not(:placeholder-shown) ~ label,
form .field.-float > select ~ label {
  padding: 2px var(--input-padding-x);
  opacity: 1;
  height: auto;
  transform: scale(0.6) translateY(-1rem) translateX(0.75rem);
  background-color: var(--input-bg);
}

form.-vertical > .field {
  grid-template-columns: 1fr;
}
form.-vertical > .field label {
  padding-top: 0;
  padding-bottom: 0;
}

form.-horizontal {
  grid-template-columns: minmax(var(--label-width), min-content) 1fr;
  grid-template-rows: repeat(auto-fill, minmax(1rem, min-content));
  grid-auto-flow: dense;
}
form.-horizontal > .field {
  display: contents;
}
form.-horizontal > .field > label {
  border: var(--input-border) solid transparent;
  text-align: right;
  padding: 0;
  align-self: center;
  font-size: var(--input-font-size);
  white-space: nowrap;
  order: -1;
}
form.-horizontal > .field > input, form.-horizontal > .field > textarea, form.-horizontal > .field > .wrapper, form.-horizontal > .field select {
  order: 1;
}

form.-split-2 {
  --field-grid: 2;
}

form.-split-4 {
  --field-grid: 4;
}

form.-split-6 {
  --field-grid: 6;
}

form.-split-10 {
  --field-grid: 10;
}

form.-implicit-10 {
  --field-grid: 10;
}

.field {
  --field-columns: 12;
}

.field.-col-2 {
  --field-columns: 2;
}

.field.-col-4 {
  --field-columns: 4;
}

form[class*=-split] {
  grid-template-columns: repeat(var(--field-grid), 1fr);
}

form[class*=-implicit] {
  display: flex;
  flex-flow: row wrap;
}
form[class*=-implicit] > .field {
  margin-top: 0 !important;
  flex: 1 1 100%;
  min-width: fit-content;
}
form[class*=-implicit] > .field.-col-6 {
  --field-columns: 6;
}
form[class*=-implicit] > .field.-col-4 {
  --field-columns: 4;
}
form[class*=-implicit] > .field[class*=-col] {
  flex: 1 0 calc(var(--field-columns) / var(--field-grid) * 100% - var(--padding-x) * (var(--field-grid) - 1));
}

form > fieldset.field:has(input[type=checkbox]), form > fieldset.field:has(input[type=radio]) {
  border: none;
  padding: 0;
  background-color: transparent;
  border-radius: inherit;
  margin-bottom: 0;
}

form .field:has(input[type=checkbox]), form .field:has(input[type=radio]) {
  min-height: auto;
  grid-template-columns: min-content 1fr;
  grid-template-rows: repeat(auto-fill, minmax(1.5rem, min-content));
  column-gap: calc(var(--padding-x) / 2);
  align-content: center;
  align-items: center;
}
form .field > input[type=checkbox], form .field > input[type=radio] {
  grid-column: 1;
  grid-row: auto;
  margin-left: var(--input-padding-x);
  align-self: center;
  height: auto;
}
form .field > input[type=checkbox] + label, form .field > input[type=radio] + label {
  grid-column: 2;
  grid-row: auto;
  color: black;
  font-size: var(--font-size);
  padding: 0;
  display: inline-flex;
  align-items: center;
}

input[list], input[type=date], input[type=datetime-local], input[type=time], input[type=number], select {
  appearance: none;
  background: var(--input-bg) var(--input-symbol) no-repeat right var(--input-padding-x) center;
}
input[list]::-ms-expand, input[type=date]::-ms-expand, input[type=datetime-local]::-ms-expand, input[type=time]::-ms-expand, input[type=number]::-ms-expand, select::-ms-expand {
  opacity: 0;
}
input[list]:-moz-focusring, input[type=date]:-moz-focusring, input[type=datetime-local]:-moz-focusring, input[type=time]:-moz-focusring, input[type=number]:-moz-focusring, select:-moz-focusring {
  color: transparent;
  text-shadow: 0 0 0 #000;
}

select {
  --input-symbol: url("data:image/svg+xml,%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20width%3D%228%22%20height%3D%228%22%20viewBox%3D%220%200%208%208%22%3E%3Cpath%20fill%3D%22rgba%2873%2C%2080%2C%2087%2C%200.5%29%22%20d%3D%22M0%200l4%204%204-4h-8z%22%20transform%3D%22translate%280%202%29%22%20%2F%3E%3C%2Fsvg%3E");
  word-wrap: normal;
}

select:focus::-ms-value {
  color: var(--input-color);
  background-color: var(--input-bg);
}

x:-o-prefocus, select {
  background-image: none;
}

input[type=number] {
  --input-symbol: url("data:image/svg+xml;charset=UTF-8,%3csvg xmlns='http://www.w3.org/2000/svg' width='8' height='8' viewBox='0 0 8 8'%3e%3cpath fill='rgba(0, 0, 0, 0.5)' d='M1,4.5l3,3l3-3H1z'/%3e%3cpath fill='rgba(0, 0, 0, 0.5)' d='M7,3.5l-3-3l-3,3H7z'/%3e%3c/svg%3e");
  background-position: calc(100% - 8px);
  padding-right: calc(var(--padding-x) - 16px);
  min-width: calc(var(--padding-x) / 2 + 2rem + 16px);
  width: auto;
}

input[type=number]::-webkit-inner-spin-button,
input[type=number]::-webkit-outer-spin-button {
  -webkit-appearance: none;
  margin: 0;
}

input[type=datetime-local]::-webkit-inner-spin-button, input[type=time]::-webkit-inner-spin-button {
  margin-left: calc(var(--input-padding-x) / 2);
  color: var(--input-icon);
}

input[type=datetime-local],
input[type=date],
input[type=time] {
  padding-right: 0;
}
input[type=datetime-local]::-webkit-calendar-picker-indicator,
input[type=date]::-webkit-calendar-picker-indicator,
input[type=time]::-webkit-calendar-picker-indicator {
  position: relative;
  right: var(--padding-x);
  margin-right: calc(var(--icon-size) / 2 * -1 - 1px);
  font-size: var(--icon-size);
  opacity: 0.5;
}

input[type=time]::-webkit-inner-spin-button {
  margin-right: calc(var(--input-padding-x) / 2 * -1);
}

input::-webkit-datetime-edit {
  overflow: visible;
  line-height: 0;
}

input[type=time], input[type=datetime-local], input[type=date] {
  background-size: var(--icon-size);
}
input[type=time]::-webkit-calendar-picker-indicator, input[type=datetime-local]::-webkit-calendar-picker-indicator, input[type=date]::-webkit-calendar-picker-indicator {
  opacity: 0;
}

input[type=datetime-local], input[type=date] {
  --input-symbol: url("data:image/svg+xml,%0A%3Csvg xmlns='http://www.w3.org/2000/svg' width='8' height='8' viewBox='0 0 8 8'%3E%3Cpath fill='rgba(0, 0, 0, 0.5)' d='M0 0v2h7v-2h-7zm0 3v4.91c0 .05.04.09.09.09h6.81c.05 0 .09-.04.09-.09v-4.91h-7zm1 1h1v1h-1v-1zm2 0h1v1h-1v-1zm2 0h1v1h-1v-1zm-4 2h1v1h-1v-1zm2 0h1v1h-1v-1z' /%3E%3C/svg%3E");
}

input[type=time] {
  --input-symbol: url("data:image/svg+xml,%0A%3Csvg xmlns='http://www.w3.org/2000/svg' width='8' height='8' viewBox='0 0 8 8'%3E%3Cpath fill='rgba(0, 0, 0, 0.5)' d='M4 0c-2.2 0-4 1.8-4 4s1.8 4 4 4 4-1.8 4-4-1.8-4-4-4zm0 1c1.66 0 3 1.34 3 3s-1.34 3-3 3-3-1.34-3-3 1.34-3 3-3zm-.5 1v2.22l.16.13.5.5.34.38.72-.72-.38-.34-.34-.34v-1.81h-1z' /%3E%3C/svg%3E");
}

input[type=time] ~ dialog {
  position: absolute;
  width: auto;
  height: auto;
  backdrop-filter: none;
  left: auto;
  right: auto;
  bottom: auto;
  top: 100%;
  min-width: unset;
  background-color: transparent;
}
input[type=time] ~ dialog > article {
  min-width: unset;
  display: grid;
  padding: calc(var(--padding-x) / 2);
  grid-template-rows: 1fr 1fr;
  grid-template-columns: min-content min-content min-content;
  column-gap: calc(var(--padding-x) / 2);
  row-gap: 0;
}
input[type=time] ~ dialog > article > input {
  grid-row: span 2;
}
input[type=time] ~ dialog > article > button {
  padding: 2px;
  font-size: var(--font-size-sm);
}
input[type=time] ~ dialog > article > button:first-of-type {
  border-bottom-width: 0;
  border-bottom-left-radius: 0;
  border-bottom-right-radius: 0;
}
input[type=time] ~ dialog > article > button:first-of-type + button {
  border-top-left-radius: 0;
  border-top-right-radius: 0;
}

.wrapper > input[type=file] {
  --color-outline: transparent;
  --color-bg: transparent;
}

input[type=file] {
  position: relative;
  appearance: none;
  display: block;
  cursor: pointer;
  box-shadow: none;
  width: 100%;
}

input[type=file]::file-selector-button, input[type=file]::-webkit-file-upload-button {
  appearance: none;
  margin: calc(var(--input-padding-y) * -1) calc(var(--input-padding-x) * -1);
  margin-inline-end: var(--input-padding-x);
  padding: var(--input-padding-y) var(--input-padding-x);
  font-size: 1em;
  font-weight: var(--font-weight-medium);
  line-height: var(--line-height-input);
  text-transform: uppercase;
  cursor: pointer;
  color: var(--context-color);
  border: none;
  border-inline-end: var(--border-width) solid var(--input-border);
  border-radius: 0;
  background-color: var(--input-bg);
}

.wrapper:has(input[type=file]), .wrapper.custom-file-upload {
  position: relative;
  display: grid;
  grid-template-columns: 1fr min-content;
  border: none;
}
.wrapper:has(input[type=file]) > input[type=file], .wrapper.custom-file-upload > input[type=file] {
  border-top-right-radius: 0;
  border-bottom-right-radius: 0;
  border-right-color: transparent;
  background-color: transparent;
}
.wrapper:has(input[type=file]) > input[type=file]::file-selector-button, .wrapper:has(input[type=file]) input[type=file]::-webkit-file-upload-button, .wrapper.custom-file-upload > input[type=file]::file-selector-button, .wrapper.custom-file-upload input[type=file]::-webkit-file-upload-button {
  z-index: 3;
}
.wrapper:has(input[type=file]) > input[type=file]:hover, .wrapper.custom-file-upload > input[type=file]:hover {
  cursor: pointer;
}
.wrapper:has(input[type=file]) > button, .wrapper.custom-file-upload > button {
  font-size: 1em;
}
.wrapper:has(input[type=file]) > input[type=text][disabled], .wrapper.custom-file-upload > input[type=text][disabled] {
  position: absolute;
  right: 0;
  bottom: 1px;
  left: 8.5rem;
  grid-row: 2;
  grid-column: 1;
  width: calc(100% - 11rem);
  padding-right: 3rem;
  color: var(--input-color) !important;
  border: none;
  background-color: var(--input-bg) !important;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}
.wrapper:has(input[type=file]) > input[type=text][disabled][readonly], .wrapper.custom-file-upload > input[type=text][disabled][readonly] {
  color: transparent !important;
}
.wrapper:has(input[type=file]) > input[type=text][disabled] + input[type=file], .wrapper.custom-file-upload > input[type=text][disabled] + input[type=file] {
  color: transparent;
}
.wrapper:has(input[type=file]) > input[type=text][disabled][readonly] + input[type=file], .wrapper.custom-file-upload > input[type=text][disabled][readonly] + input[type=file] {
  color: inherit;
}
.wrapper:has(input[type=file]) > button, .wrapper.custom-file-upload > button {
  z-index: 5;
  margin-left: -2px;
  padding-right: var(--input-padding-x);
  padding-left: var(--input-padding-x);
  border-top-left-radius: 0;
  border-bottom-left-radius: 0;
}
.wrapper:has(input[type=file]) > button input[type=checkbox], .wrapper.custom-file-upload > button input[type=checkbox] {
  display: none;
}
.wrapper:has(input[type=file]) > button:hover, .wrapper.custom-file-upload > button:hover {
  cursor: pointer;
}
.wrapper:has(input[type=file]) + legend, .wrapper:has(input[type=file]) + label, .wrapper.custom-file-upload + legend, .wrapper.custom-file-upload + label {
  z-index: 1;
}

input[list]::-webkit-calendar-picker-indicator {
  margin-right: calc(var(--input-padding-x) / 2 * -1);
  opacity: 0;
}

form[aria-invalid=true] > input,
form[aria-invalid=true] > select,
form[aria-invalid=true] > textarea,
form[aria-invalid=true] > .wrapper,
input[aria-invalid=true],
select[aria-invalid=true],
textarea[aria-invalid=true] {
  --border-color: red;
}
form[aria-invalid=true] > input:active, form[aria-invalid=true] > input:focus,
form[aria-invalid=true] > select:active,
form[aria-invalid=true] > select:focus,
form[aria-invalid=true] > textarea:active,
form[aria-invalid=true] > textarea:focus,
form[aria-invalid=true] > .wrapper:active,
form[aria-invalid=true] > .wrapper:focus,
input[aria-invalid=true]:active,
input[aria-invalid=true]:focus,
select[aria-invalid=true]:active,
select[aria-invalid=true]:focus,
textarea[aria-invalid=true]:active,
textarea[aria-invalid=true]:focus {
  box-shadow: 0 0 0 var(--outline-width) var(--border-color);
}

.wrapper:has([aria-invalid=true]) {
  --border-color: red;
  --outline-color: var(--border-color);
}
.wrapper:has([aria-invalid=true]):focus-within {
  box-shadow: 0 0 0 var(--outline-width) var(--outline-color);
}

[aria-busy=true] {
  cursor: progress;
}

[aria-busy=true]:not(input, select, textarea, .-spinnerless)::before {
  display: inline-block;
  width: 1em;
  height: 1em;
  border: 0.1875em solid currentColor;
  border-radius: 1em;
  border-right-color: transparent;
  content: "";
  vertical-align: text-bottom;
  vertical-align: -0.125em;
  animation: spinner 0.75s linear infinite;
  opacity: var(--opacity-busy);
}
[aria-busy=true]:not(input, select, textarea, .-spinnerless):not(:empty)::before {
  margin-right: calc(var(--spacer) * 0.5);
  margin-left: 0;
  margin-inline-start: 0;
  margin-inline-end: calc(var(--spacer) * 0.5);
}
[aria-busy=true]:not(input, select, textarea, .-spinnerless):empty {
  text-align: center;
}

button[aria-busy=true]:not(.-spinnerless),
input[type=submit][aria-busy=true]:not(.-spinnerless),
input[type=button][aria-busy=true]:not(.-spinnerless),
input[type=reset][aria-busy=true]:not(.-spinnerless),
a[aria-busy=true]:not(.-spinnerless) {
  pointer-events: none;
}

@keyframes spinner {
  to {
    transform: rotate(360deg);
  }
}
[title]:not(.-tipless) {
  position: relative;
}
[title]:not(.-tipless):not(a, button, input, textarea, select) {
  border-bottom: 1px dotted;
  text-decoration: none;
  cursor: help;
}
[title]:not(.-tipless)::before, [title]:not(.-tipless)::after {
  display: block;
  z-index: 99;
  position: absolute;
  bottom: 100%;
  left: 50%;
  padding: 0.25rem 0.5rem;
  overflow: hidden;
  transform: translate(-50%, -0.25rem);
  border-radius: var(--border-radius);
  background: var(--theme-inverse);
  content: attr(title);
  color: var(--theme-on-inverse);
  font-style: normal;
  font-weight: var(--font-weight-normal);
  font-size: 0.875rem;
  text-decoration: none;
  text-overflow: ellipsis;
  white-space: nowrap;
  opacity: 0;
  pointer-events: none;
}
[title]:not(.-tipless)::after {
  padding: 0;
  transform: translate(-50%, 0rem);
  border-top: 0.3rem solid;
  border-right: 0.3rem solid transparent;
  border-left: 0.3rem solid transparent;
  border-radius: 0;
  background-color: transparent;
  content: "";
  color: var(--theme-inverse);
}
[title]:not(.-tipless):focus::before, [title]:not(.-tipless):focus::after, [title]:not(.-tipless):hover::before, [title]:not(.-tipless):hover::after {
  opacity: 1;
}

.-xs-hidden {
  --layout-display: hidden;
}

.-xs-flex {
  --layout-display: flex;
}

.-xs-grid {
  --layout-display: grid;
}

.-xs-block {
  --layout-display: block;
}

.-xs-inline {
  --layout-display: inline;
}

.-xs-inline-block {
  --layout-display: inline-block;
}

.-xs-inline-flex {
  --layout-display: inline-flex;
}

@media screen and (min-width: 576px) {
  .-sm-hidden {
    --layout-display: hidden;
  }
  .-sm-flex {
    --layout-display: flex;
  }
  .-sm-grid {
    --layout-display: grid;
  }
  .-sm-block {
    --layout-display: block;
  }
  .-sm-inline {
    --layout-display: inline;
  }
  .-sm-inline-block {
    --layout-display: inline-block;
  }
  .-sm-inline-flex {
    --layout-display: inline-flex;
  }
}
@media screen and (min-width: 768px) {
  .-md-hidden {
    --layout-display: hidden;
  }
  .-md-flex {
    --layout-display: flex;
  }
  .-md-grid {
    --layout-display: grid;
  }
  .-md-block {
    --layout-display: block;
  }
  .-md-inline {
    --layout-display: inline;
  }
  .-md-inline-block {
    --layout-display: inline-block;
  }
  .-md-inline-flex {
    --layout-display: inline-flex;
  }
}
@media screen and (min-width: 992px) {
  .-lg-hidden {
    --layout-display: hidden;
  }
  .-lg-flex {
    --layout-display: flex;
  }
  .-lg-grid {
    --layout-display: grid;
  }
  .-lg-block {
    --layout-display: block;
  }
  .-lg-inline {
    --layout-display: inline;
  }
  .-lg-inline-block {
    --layout-display: inline-block;
  }
  .-lg-inline-flex {
    --layout-display: inline-flex;
  }
}
@media screen and (min-width: 1200px) {
  .-xl-hidden {
    --layout-display: hidden;
  }
  .-xl-flex {
    --layout-display: flex;
  }
  .-xl-grid {
    --layout-display: grid;
  }
  .-xl-block {
    --layout-display: block;
  }
  .-xl-inline {
    --layout-display: inline;
  }
  .-xl-inline-block {
    --layout-display: inline-block;
  }
  .-xl-inline-flex {
    --layout-display: inline-flex;
  }
  dialog[role=navigation] {
    display: contents !important;
  }
}

/*# sourceMappingURL=rules.css.map */
