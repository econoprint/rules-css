@use "sass:color" as color-native;
@use "../../modules/theme/colors";
@use "../../modules/theme/bg";
@use "../../modules/theme/neutrals";
@use "../config/roles";
@use "context";

// Theme Colors
$color: colors.tone("major", roles.$accent);
$on-color: colors.tone("major", roles.$on-accent);
$on-color-link: colors.tone("major", roles.$on-accent-link);
$alt: colors.tone("major", roles.$container);
$on-alt: colors.tone("major", roles.$on-container);
$on-alt-link: colors.tone("major", roles.$link-on-container);
$body: bg.tone("major", roles.$body);
$bg: bg.tone("major", roles.$bg);
$e2: color-native.mix($color, $bg, roles.$elevation-2);
$e3: color-native.mix($color, $bg, roles.$elevation-3);
$e4: color-native.mix($color, $bg, roles.$elevation-4);
$e5: color-native.mix($color, $bg, roles.$elevation-5);
$on-bg: bg.tone("major", roles.$on-bg);
$on-bg-link: colors.tone("major", roles.$on-bg-link);
$neutral: neutrals.tone("major", roles.$neutral);
$on-neutral: neutrals.tone("major", roles.$on-neutral);
$on-neutral-link: colors.tone("major", roles.$on-neutral-link);
$outline: neutrals.tone("major", roles.$outline);
$divider: neutrals.tone("major", roles.$divider);
$shadow: bg.tone("major", roles.$shadow);
$inverse: bg.tone("major", roles.$inverse);
$on-inverse: bg.tone("major", roles.$on-inverse);
$on-inverse-link: bg.tone("major", roles.$on-inverse-link);

@mixin custom-properties() {
  @include context.custom-properties($bg, $e2, $e3, $e4, $e5, $on-bg, $on-bg-link, $neutral, $on-neutral, $on-neutral-link, $inverse, $on-inverse, $on-inverse-link, $color, $on-color, $on-color-link, $alt, $on-alt, $on-alt-link, $outline, $divider, $shadow);
}