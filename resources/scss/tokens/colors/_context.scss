@use "../../modules/color/sass-color" as color;

@mixin custom-properties($bg, $e2, $e3, $e4, $e5, $on-bg, $on-bg-link, $neutral, $on-neutral, $on-neutral-link, $inverse, $on-inverse, $on-inverse-link, $color, $on-color, $on-color-link, $alt, $on-alt, $on-alt-link, $outline, $divider, $shadow) {
  // RGB Values, to be removed when relative color is a thing
  --theme-bg-rgb: #{color.rgb($bg)};
  --theme-e2-rgb: #{color.rgb($e2)};
  --theme-e3-rgb: #{color.rgb($e3)};
  --theme-e4-rgb: #{color.rgb($e4)};
  --theme-e5-rgb: #{color.rgb($e5)};
  --theme-on-bg-rgb: #{color.rgb($on-bg)};
  --theme-link-on-bg-rgb: #{color.rgb($on-bg-link)};
  --theme-n2-rgb: #{color.rgb($neutral)};
  --theme-link-on-n2-rgb: #{color.rgb($on-neutral-link)};
  --theme-inverse-rgb: #{color.rgb($inverse)};
  --theme-link-on-inverse-rgb: #{color.rgb($on-inverse-link)};
  --theme-color-rgb: #{color.rgb($color)};
  --theme-on-color-rgb: #{color.rgb($on-color)};
  --theme-link-on-color-rgb: #{color.rgb($on-color-link)};
  --theme-c1-rgb: #{color.rgb($alt)};
  --theme-link-on-c1-rgb: #{color.rgb($on-alt-link)};
  --theme-outline-rgb: #{color.rgb($outline)};
  // Actual Values
  --theme-bg: rgb(var(--theme-bg-rgb) / 1);
  --theme-on-bg: rgb(var(--theme-on-bg-rgb) / 1);
  --theme-link-on-bg: rgb(var(--theme-link-on-bg-rgb) / 1);
  --theme-n2: rgb(var(--theme-n2-rgb) / 1);
  --theme-on-n2: #{$on-neutral};
  --theme-link-on-n2: rgb(var(--theme-link-on-n2-rgb) / 1);
  --theme-outline: rgb(var(--theme-outline-rgb) /1);
  --theme-divider: #{$divider};
  --theme-shadow: #{$shadow};
  --theme-inverse: rgb(var(--theme-inverse-rgb) / 1);
  --theme-on-inverse: #{$on-inverse};
  --theme-link-on-inverse: rgb(var(--theme-link-on-inverse-rgb) / 1);
  --theme-color: rgb(var(--theme-color-rgb) / 1);
  --theme-on-color: rgb(var(--theme-on-color-rgb) / 1);
  --theme-link-on-color: rgb(var(--theme-link-on-color-rgb) / 1);
  --theme-c1: rgb(var(--theme-c1-rgb) / 1);
  --theme-on-c1: #{$on-alt};
  --theme-link-on-c1: rgb(var(--theme-link-on-c1-rgb) / 1);
}